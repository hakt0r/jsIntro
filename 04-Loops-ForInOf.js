
let array = [1,2,3,4,5,6,7];

console.log(`
 ██████╗██╗      █████╗ ███████╗███████╗██╗ ██████╗
██╔════╝██║     ██╔══██╗██╔════╝██╔════╝██║██╔════╝
██║     ██║     ███████║███████╗███████╗██║██║     
██║     ██║     ██╔══██║╚════██║╚════██║██║██║     
╚██████╗███████╗██║  ██║███████║███████║██║╚██████╗
 ╚═════╝╚══════╝╚═╝  ╚═╝╚══════╝╚══════╝╚═╝ ╚═════╝
`);

for (
  let index = 0;
  index < array.length;
  index++
) {
    const element = array[index];
    console.log('classic:', element);
}

console.log(`
███████╗ ██████╗ ██████╗      ██████╗ ███████╗
██╔════╝██╔═══██╗██╔══██╗    ██╔═══██╗██╔════╝
█████╗  ██║   ██║██████╔╝    ██║   ██║█████╗  
██╔══╝  ██║   ██║██╔══██╗    ██║   ██║██╔══╝  
██║     ╚██████╔╝██║  ██║    ╚██████╔╝██║     
╚═╝      ╚═════╝ ╚═╝  ╚═╝     ╚═════╝ ╚═╝     
`);

// instead of control the iterator and
//   getting the elements from the array
//   we can use a shortcut call the
//   for-of loop
//   it will immedatly give us the values
//   without any hassle

//            let index = 0; index < array.length; index++
//          vvvvvvvvvvvvvv const value = array[index];
for ( const value of array ) {
    console.log('of:',value);
}

// if you need the index you can use the for in loop


// These loops are not only good for arrays...
//  ... you can use them for objects too

let o = {
  name:   'anx',
  age:    36,
  skill:  9001,
  height: 1.93,
  weight: 73
}

console.log(`
 ██████╗ ██████╗      ██╗███████╗ ██████╗████████╗    ███████╗ ██████╗ ██████╗     ██╗███╗   ██╗
██╔═══██╗██╔══██╗     ██║██╔════╝██╔════╝╚══██╔══╝    ██╔════╝██╔═══██╗██╔══██╗    ██║████╗  ██║
██║   ██║██████╔╝     ██║█████╗  ██║        ██║       █████╗  ██║   ██║██████╔╝    ██║██╔██╗ ██║
██║   ██║██╔══██╗██   ██║██╔══╝  ██║        ██║       ██╔══╝  ██║   ██║██╔══██╗    ██║██║╚██╗██║
╚██████╔╝██████╔╝╚█████╔╝███████╗╚██████╗   ██║       ██║     ╚██████╔╝██║  ██║    ██║██║ ╚████║
 ╚═════╝ ╚═════╝  ╚════╝ ╚══════╝ ╚═════╝   ╚═╝       ╚═╝      ╚═════╝ ╚═╝  ╚═╝    ╚═╝╚═╝  ╚═══╝
`);


for ( const key in o ) {
  console.log( key, o[key] );
}

console.log(`
 ██████╗ ██████╗      ██╗███████╗ ██████╗████████╗    ███████╗ ██████╗ ██████╗      ██████╗ ███████╗
██╔═══██╗██╔══██╗     ██║██╔════╝██╔════╝╚══██╔══╝    ██╔════╝██╔═══██╗██╔══██╗    ██╔═══██╗██╔════╝
██║   ██║██████╔╝     ██║█████╗  ██║        ██║       █████╗  ██║   ██║██████╔╝    ██║   ██║█████╗  
██║   ██║██╔══██╗██   ██║██╔══╝  ██║        ██║       ██╔══╝  ██║   ██║██╔══██╗    ██║   ██║██╔══╝  
╚██████╔╝██████╔╝╚█████╔╝███████╗╚██████╗   ██║       ██║     ╚██████╔╝██║  ██║    ╚██████╔╝██║     
 ╚═════╝ ╚═════╝  ╚════╝ ╚══════╝ ╚═════╝   ╚═╝       ╚═╝      ╚═════╝ ╚═╝  ╚═╝     ╚═════╝ ╚═╝     
`);

// we can do the sam to get the values
//   only we nee to use a little helper function
//   Object.keys(o) => ['name','age','skill','height','weight']

const keys = Object.values(o);       console.log('keys',keys);

for ( const val of keys ) {
  console.log( val );
}

console.log(`
███████╗██╗  ██╗ ██████╗ ██████╗ ████████╗███████╗██████╗ 
██╔════╝██║  ██║██╔═══██╗██╔══██╗╚══██╔══╝██╔════╝██╔══██╗
███████╗███████║██║   ██║██████╔╝   ██║   █████╗  ██████╔╝
╚════██║██╔══██║██║   ██║██╔══██╗   ██║   ██╔══╝  ██╔══██╗
███████║██║  ██║╚██████╔╝██║  ██║   ██║   ███████╗██║  ██║
╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝
`);

for ( const val of Object.values(o) ) console.log( val );
